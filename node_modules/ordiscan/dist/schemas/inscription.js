"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InscriptionSchema = exports.InscriptionTraitSchema = void 0;
const zod_1 = require("zod");
const brc20_1 = require("./brc20");
const sat_1 = require("./sat");
exports.InscriptionTraitSchema = zod_1.z.object({
    name: zod_1.z.string(),
    value: zod_1.z.string(),
    rarity: zod_1.z.number(),
});
exports.InscriptionSchema = zod_1.z
    .object({
    inscription_id: zod_1.z.string(),
    inscription_number: zod_1.z.number(),
    content_type: zod_1.z.string(),
    owner_address: zod_1.z.string(),
    owner_output: zod_1.z.string(),
    timestamp: zod_1.z.string(),
    metadata: zod_1.z
        .string()
        .or(zod_1.z.record(zod_1.z.string(), zod_1.z.string().or(zod_1.z.number())))
        .nullable(),
    metaprotocol: zod_1.z.string().nullable(),
    sat: zod_1.z.number(),
    content_url: zod_1.z.string(),
    parent_inscription_id: zod_1.z.string().nullable(),
    delegate_inscription_id: zod_1.z.string().nullable(),
    satributes: zod_1.z.array(sat_1.SatributeSchema),
    submodules: zod_1.z.array(zod_1.z.string()),
    genesis_address: zod_1.z.string(),
    genesis_output: zod_1.z.string(),
    collection_slug: zod_1.z.string().nullable(),
    sats_name: zod_1.z.string().nullable(),
    brc20_action: brc20_1.Brc20ActionSchema.nullable(),
})
    .strict();
//# sourceMappingURL=inscription.js.map