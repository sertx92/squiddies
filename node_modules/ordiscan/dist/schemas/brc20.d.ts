import { z } from "zod";
export declare const Brc20ActionTypeSchema: z.ZodEnum<["TRANSFER", "MINT", "DEPLOY"]>;
export declare const Brc20ActionSchema: z.ZodObject<{
    tick: z.ZodString;
    type: z.ZodEnum<["TRANSFER", "MINT", "DEPLOY"]>;
}, "strip", z.ZodTypeAny, {
    tick: string;
    type: "TRANSFER" | "MINT" | "DEPLOY";
}, {
    tick: string;
    type: "TRANSFER" | "MINT" | "DEPLOY";
}>;
export declare const Brc20TokenSchema: z.ZodObject<{
    tick: z.ZodString;
    minted: z.ZodNumber;
    max_supply: z.ZodNumber;
    price: z.ZodNullable<z.ZodNumber>;
}, "strict", z.ZodTypeAny, {
    tick: string;
    minted: number;
    max_supply: number;
    price: number | null;
}, {
    tick: string;
    minted: number;
    max_supply: number;
    price: number | null;
}>;
export type Brc20Token = z.infer<typeof Brc20TokenSchema>;
export declare const Brc20BalanceSchema: z.ZodObject<{
    tick: z.ZodString;
    balance: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    tick: string;
    balance: number;
}, {
    tick: string;
    balance: number;
}>;
export type Brc20Balance = z.infer<typeof Brc20BalanceSchema>;
export declare const Brc20ActivitySchema: z.ZodObject<{
    ticker: z.ZodString;
    type: z.ZodEnum<["TRANSFER", "MINT", "DEPLOY"]>;
    from_address: z.ZodNullable<z.ZodString>;
    to_address: z.ZodNullable<z.ZodString>;
    amount: z.ZodNumber;
    inscription_id: z.ZodString;
    timestamp: z.ZodString;
}, "strip", z.ZodTypeAny, {
    type: "TRANSFER" | "MINT" | "DEPLOY";
    ticker: string;
    from_address: string | null;
    to_address: string | null;
    amount: number;
    inscription_id: string;
    timestamp: string;
}, {
    type: "TRANSFER" | "MINT" | "DEPLOY";
    ticker: string;
    from_address: string | null;
    to_address: string | null;
    amount: number;
    inscription_id: string;
    timestamp: string;
}>;
export type Brc20Activity = z.infer<typeof Brc20ActivitySchema>;
//# sourceMappingURL=brc20.d.ts.map