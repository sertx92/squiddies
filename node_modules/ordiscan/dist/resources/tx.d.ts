import { BaseResource } from "../resources/base";
export declare class TxResource extends BaseResource {
    getInfo(txid: string): Promise<{
        txid: string;
        confirmed: boolean;
        fee: number;
        size: number;
        weight: number;
        block_hash: string;
        indexed: boolean;
        has_inscriptions: boolean;
        has_inscription_transfers: boolean;
        has_runes: boolean;
    }>;
    getNewInscriptions({ txid }: {
        txid: string;
    }): Promise<{
        inscription_id: string;
        timestamp: string;
        satributes: ("UNCOMMON" | "RARE" | "EPIC" | "LEGENDARY" | "MYTHIC" | "BLACK_UNCOMMON" | "BLACK_RARE" | "BLACK_EPIC" | "BLACK_LEGENDARY" | "BLACK_MYTHIC" | "BLOCK_9" | "BLOCK_78" | "NAKAMOTO" | "FIRST_TX" | "VINTAGE" | "PIZZA" | "HITMAN" | "PALINDROME" | "ALPHA" | "OMEGA")[];
        inscription_number: number;
        content_type: string;
        owner_address: string;
        owner_output: string;
        metadata: string | Record<string, string | number> | null;
        metaprotocol: string | null;
        sat: number;
        content_url: string;
        parent_inscription_id: string | null;
        delegate_inscription_id: string | null;
        submodules: string[];
        genesis_address: string;
        genesis_output: string;
        collection_slug: string | null;
        sats_name: string | null;
        brc20_action: {
            tick: string;
            type: "TRANSFER" | "MINT" | "DEPLOY";
        } | null;
    }[]>;
    getInscriptionTransfers({ txid }: {
        txid: string;
    }): Promise<{
        from_address: string;
        to_address: string;
        inscription_id: string;
        timestamp: string;
        spent_as_fee: boolean;
        txid: string;
        confirmed: boolean;
    }[]>;
    getRunes({ txid }: {
        txid: string;
    }): Promise<{
        timestamp: string;
        txid: string;
        runestone_messages: {
            type: "TRANSFER" | "MINT" | "ETCH";
            rune: string;
        }[];
        inputs: {
            rune: string;
            address: string;
            output: string;
            rune_amount: string;
        }[];
        outputs: {
            rune: string;
            address: string;
            rune_amount: string;
            vout: number;
        }[];
    }>;
}
//# sourceMappingURL=tx.d.ts.map