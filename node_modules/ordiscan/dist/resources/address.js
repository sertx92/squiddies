"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddressResource = void 0;
const base_1 = require("../resources/base");
class AddressResource extends base_1.BaseResource {
    async getUtxos({ address }) {
        return this.client.fetch(`/address/${address}/utxos`);
    }
    async getInscriptionIds({ address }) {
        let url = `/address/${address}/inscription-ids`;
        return this.client.fetch(url);
    }
    async getInscriptions({ address, page }) {
        let url = `/address/${address}/inscriptions`;
        if (page) {
            url += `?page=${page}`;
        }
        return this.client.fetch(url);
    }
    async getRunes({ address }) {
        return this.client.fetch(`/address/${address}/runes`);
    }
    async getBrc20Tokens({ address }) {
        return this.client.fetch(`/address/${address}/brc20`);
    }
    async getRareSats({ address }) {
        return this.client.fetch(`/address/${address}/rare-sats`);
    }
    async getInscriptionActivity({ address, type, page, }) {
        let url = `/address/${address}/activity`;
        const params = new URLSearchParams();
        if (type) {
            params.append("type", type);
        }
        if (page) {
            params.append("page", page.toString());
        }
        if (params.size) {
            url += `?${params.toString()}`;
        }
        return this.client.fetch(url);
    }
    async getRunesActivity({ address, page, sort, }) {
        let url = `/address/${address}/activity/runes`;
        const params = new URLSearchParams();
        if (sort) {
            params.append("sort", sort);
        }
        if (page) {
            params.append("page", page.toString());
        }
        if (params.size) {
            url += `?${params.toString()}`;
        }
        return this.client.fetch(url);
    }
    async getBrc20Activity({ address, page, sort, }) {
        let url = `/address/${address}/activity/brc20`;
        const params = new URLSearchParams();
        if (sort) {
            params.append("sort", sort);
        }
        if (page) {
            params.append("page", page.toString());
        }
        if (params.size) {
            url += `?${params.toString()}`;
        }
        return this.client.fetch(url);
    }
}
exports.AddressResource = AddressResource;
//# sourceMappingURL=address.js.map