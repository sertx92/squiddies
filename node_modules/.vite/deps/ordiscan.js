var __getOwnPropNames = Object.getOwnPropertyNames;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};

// node_modules/ordiscan/dist/resources/base.js
var require_base = __commonJS({
  "node_modules/ordiscan/dist/resources/base.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BaseResource = void 0;
    var BaseResource = class {
      constructor(client) {
        this.client = client;
      }
    };
    exports.BaseResource = BaseResource;
  }
});

// node_modules/ordiscan/dist/resources/address.js
var require_address = __commonJS({
  "node_modules/ordiscan/dist/resources/address.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.AddressResource = void 0;
    var base_1 = require_base();
    var AddressResource = class extends base_1.BaseResource {
      async getUtxos({ address }) {
        return this.client.fetch(`/address/${address}/utxos`);
      }
      async getInscriptionIds({ address }) {
        let url = `/address/${address}/inscription-ids`;
        return this.client.fetch(url);
      }
      async getInscriptions({ address, page }) {
        let url = `/address/${address}/inscriptions`;
        if (page) {
          url += `?page=${page}`;
        }
        return this.client.fetch(url);
      }
      async getRunes({ address }) {
        return this.client.fetch(`/address/${address}/runes`);
      }
      async getBrc20Tokens({ address }) {
        return this.client.fetch(`/address/${address}/brc20`);
      }
      async getRareSats({ address }) {
        return this.client.fetch(`/address/${address}/rare-sats`);
      }
      async getInscriptionActivity({ address, type, page }) {
        let url = `/address/${address}/activity`;
        const params = new URLSearchParams();
        if (type) {
          params.append("type", type);
        }
        if (page) {
          params.append("page", page.toString());
        }
        if (params.size) {
          url += `?${params.toString()}`;
        }
        return this.client.fetch(url);
      }
      async getRunesActivity({ address, page, sort }) {
        let url = `/address/${address}/activity/runes`;
        const params = new URLSearchParams();
        if (sort) {
          params.append("sort", sort);
        }
        if (page) {
          params.append("page", page.toString());
        }
        if (params.size) {
          url += `?${params.toString()}`;
        }
        return this.client.fetch(url);
      }
      async getBrc20Activity({ address, page, sort }) {
        let url = `/address/${address}/activity/brc20`;
        const params = new URLSearchParams();
        if (sort) {
          params.append("sort", sort);
        }
        if (page) {
          params.append("page", page.toString());
        }
        if (params.size) {
          url += `?${params.toString()}`;
        }
        return this.client.fetch(url);
      }
    };
    exports.AddressResource = AddressResource;
  }
});

// node_modules/ordiscan/dist/resources/brc20.js
var require_brc20 = __commonJS({
  "node_modules/ordiscan/dist/resources/brc20.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Brc20Resource = void 0;
    var base_1 = require_base();
    var Brc20Resource = class extends base_1.BaseResource {
      async list({ page, sort } = {}) {
        let url = `/brc20`;
        const params = new URLSearchParams();
        if (sort) {
          params.append("sort", sort);
        }
        if (page) {
          params.append("page", page.toString());
        }
        if (params.size) {
          url += `?${params.toString()}`;
        }
        return this.client.fetch(url);
      }
      async getInfo({ name }) {
        return this.client.fetch(`/brc20/${name}`);
      }
    };
    exports.Brc20Resource = Brc20Resource;
  }
});

// node_modules/ordiscan/dist/resources/collection.js
var require_collection = __commonJS({
  "node_modules/ordiscan/dist/resources/collection.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.CollectionResource = void 0;
    var base_1 = require_base();
    var CollectionResource = class extends base_1.BaseResource {
      async list({ page } = {}) {
        const params = new URLSearchParams();
        let url = "/collections";
        if (page !== void 0) {
          params.append("page", page.toString());
        }
        if (params.size) {
          url += `?${params.toString()}`;
        }
        return this.client.fetch(url);
      }
      async getInfo({ slug }) {
        return this.client.fetch(`/collection/${slug}`);
      }
      async getInscriptions({ slug }) {
        return this.client.fetch(`/collection/${slug}/inscriptions`);
      }
    };
    exports.CollectionResource = CollectionResource;
  }
});

// node_modules/ordiscan/dist/resources/inscription.js
var require_inscription = __commonJS({
  "node_modules/ordiscan/dist/resources/inscription.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.InscriptionResource = void 0;
    var base_1 = require_base();
    var InscriptionResource = class extends base_1.BaseResource {
      async getInfo(identifier) {
        return this.client.fetch(`/inscription/${identifier}`);
      }
      async list({ sort, before, after } = {}) {
        let url = "/inscriptions";
        const params = new URLSearchParams();
        if (sort) {
          params.append("sort", sort);
        }
        if (before !== void 0) {
          params.append("before", before.toString());
        }
        if (after !== void 0) {
          params.append("after", after.toString());
        }
        if (params.size) {
          url += `?${params.toString()}`;
        }
        return this.client.fetch(url);
      }
      async getTransfers({ inscriptionId, page }) {
        let url = `/inscription/${inscriptionId}/activity`;
        const params = new URLSearchParams();
        if (page !== void 0) {
          params.append("page", page.toString());
        }
        if (params.size) {
          url += `?${params.toString()}`;
        }
        return this.client.fetch(url);
      }
      async getTraits({ inscriptionId }) {
        return this.client.fetch(`/inscription/${inscriptionId}/traits`);
      }
    };
    exports.InscriptionResource = InscriptionResource;
  }
});

// node_modules/ordiscan/dist/resources/rune.js
var require_rune = __commonJS({
  "node_modules/ordiscan/dist/resources/rune.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.RuneResource = void 0;
    var base_1 = require_base();
    var RuneResource = class extends base_1.BaseResource {
      async list({ sort, after, before } = {}) {
        const params = new URLSearchParams();
        let url = "/runes";
        if (sort) {
          params.append("sort", sort);
        }
        if (before !== void 0) {
          params.append("before", before.toString());
        }
        if (after !== void 0) {
          params.append("after", after.toString());
        }
        if (params.size) {
          url += `?${params.toString()}`;
        }
        return this.client.fetch(url);
      }
      async getInfo({ name }) {
        return this.client.fetch(`/rune/${name}`);
      }
      async getMarketInfo({ name }) {
        return this.client.fetch(`/rune/${name}/market`);
      }
      async getUnlockDate({ name }) {
        return this.client.fetch(`/rune-name/${name}`);
      }
    };
    exports.RuneResource = RuneResource;
  }
});

// node_modules/ordiscan/dist/resources/sat.js
var require_sat = __commonJS({
  "node_modules/ordiscan/dist/resources/sat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SatResource = void 0;
    var base_1 = require_base();
    var SatResource = class extends base_1.BaseResource {
      async getInfo(satNumber) {
        return this.client.fetch(`/sat/${satNumber}`);
      }
    };
    exports.SatResource = SatResource;
  }
});

// node_modules/ordiscan/dist/resources/tx.js
var require_tx = __commonJS({
  "node_modules/ordiscan/dist/resources/tx.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TxResource = void 0;
    var base_1 = require_base();
    var TxResource = class extends base_1.BaseResource {
      async getInfo(txid) {
        return this.client.fetch(`/tx/${txid}`);
      }
      async getNewInscriptions({ txid }) {
        return this.client.fetch(`/tx/${txid}/inscriptions`);
      }
      async getInscriptionTransfers({ txid }) {
        return this.client.fetch(`/tx/${txid}/inscription-transfers`);
      }
      async getRunes({ txid }) {
        return this.client.fetch(`/tx/${txid}/runes`);
      }
    };
    exports.TxResource = TxResource;
  }
});

// node_modules/ordiscan/dist/resources/utxo.js
var require_utxo = __commonJS({
  "node_modules/ordiscan/dist/resources/utxo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.UtxoResource = void 0;
    var base_1 = require_base();
    var UtxoResource = class extends base_1.BaseResource {
      async getSatRanges({ utxo }) {
        return this.client.fetch(`/utxo/${utxo}/sat-ranges`);
      }
      async getRareSats({ utxo }) {
        return this.client.fetch(`/utxo/${utxo}/rare-sats`);
      }
    };
    exports.UtxoResource = UtxoResource;
  }
});

// node_modules/ordiscan/dist/types.js
var require_types = __commonJS({
  "node_modules/ordiscan/dist/types.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.OrdiscanError = void 0;
    var OrdiscanError = class extends Error {
      constructor(message, status, response) {
        super(message);
        this.status = status;
        this.response = response;
        this.name = "OrdiscanError";
      }
    };
    exports.OrdiscanError = OrdiscanError;
  }
});

// node_modules/ordiscan/dist/client.js
var require_client = __commonJS({
  "node_modules/ordiscan/dist/client.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Ordiscan = void 0;
    var address_1 = require_address();
    var brc20_1 = require_brc20();
    var collection_1 = require_collection();
    var inscription_1 = require_inscription();
    var rune_1 = require_rune();
    var sat_1 = require_sat();
    var tx_1 = require_tx();
    var utxo_1 = require_utxo();
    var types_1 = require_types();
    var DEFAULT_BASE_URL = "https://api.ordiscan.com";
    var Ordiscan = class {
      constructor(apiKey, config) {
        this.auth = apiKey;
        this.baseUrl = (config === null || config === void 0 ? void 0 : config.baseUrl) || DEFAULT_BASE_URL;
        this.version = (config === null || config === void 0 ? void 0 : config.version) || "v1";
        this.address = new address_1.AddressResource(this);
        this.tx = new tx_1.TxResource(this);
        this.inscription = new inscription_1.InscriptionResource(this);
        this.rune = new rune_1.RuneResource(this);
        this.sat = new sat_1.SatResource(this);
        this.brc20 = new brc20_1.Brc20Resource(this);
        this.collection = new collection_1.CollectionResource(this);
        this.utxo = new utxo_1.UtxoResource(this);
      }
      get apiUrl() {
        return `${this.baseUrl}/${this.version}`;
      }
      async fetch(endpoint, options = {}) {
        const url = `${this.apiUrl}${endpoint}`;
        const headers = {
          Authorization: `Bearer ${this.auth}`,
          "Content-Type": "application/json",
          ...options.headers
        };
        if (false) {
          const isMock = !process.env.SKIP_MOCKS;
          console.log(`➡️${isMock ? "(mocked)" : "(real)"} ${options.method || "GET"}`, url);
        }
        const response = await fetch(url, {
          ...options,
          headers
        });
        if (!response.ok) {
          const err = await response.json().catch(() => null);
          throw new types_1.OrdiscanError((err === null || err === void 0 ? void 0 : err.error.message) || "Request failed!", response.status);
        }
        const json = await response.json();
        return json.data;
      }
    };
    exports.Ordiscan = Ordiscan;
  }
});

// node_modules/ordiscan/dist/index.js
var require_dist = __commonJS({
  "node_modules/ordiscan/dist/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.OrdiscanError = exports.Ordiscan = void 0;
    var client_1 = require_client();
    var client_2 = require_client();
    Object.defineProperty(exports, "Ordiscan", { enumerable: true, get: function() {
      return client_2.Ordiscan;
    } });
    exports.default = client_1.Ordiscan;
    var types_1 = require_types();
    Object.defineProperty(exports, "OrdiscanError", { enumerable: true, get: function() {
      return types_1.OrdiscanError;
    } });
  }
});
export default require_dist();
//# sourceMappingURL=ordiscan.js.map
